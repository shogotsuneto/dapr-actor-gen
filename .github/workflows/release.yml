name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Validate that we're on the main branch
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    steps:
      - name: Check branch
        if: github.ref != 'refs/heads/main'
        run: |
          echo "❌ Releases can only be created from the main branch"
          exit 1
      
      - name: Validate version format
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "❌ Version must be in format v1.2.3 or v1.2.3-alpha"
            exit 1
          fi
          echo "✅ Version format is valid: ${{ github.event.inputs.version }}"

  # Build binaries for multiple platforms
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            ext: ""
          - os: linux
            arch: arm64
            ext: ""
          - os: darwin
            arch: amd64
            ext: ""
          - os: darwin
            arch: arm64
            ext: ""
          - os: windows
            arch: amd64
            ext: ".exe"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.6'
          cache: true
      
      - name: Download dependencies
        run: go mod download
      
      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          go build -a -installsuffix cgo -ldflags="-w -s" -o dist/dapr-actor-gen-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} ./cmd
      
      - name: Create archive
        run: |
          cd dist
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip dapr-actor-gen-${{ matrix.os }}-${{ matrix.arch }}.zip dapr-actor-gen-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          else
            tar -czf dapr-actor-gen-${{ matrix.os }}-${{ matrix.arch }}.tar.gz dapr-actor-gen-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          fi
      
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: dapr-actor-gen-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/dapr-actor-gen-${{ matrix.os }}-${{ matrix.arch }}.*

  # Build and push Docker image
  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: validate
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.version }}
            type=raw,value=latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Create GitHub release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-binaries, build-docker]
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts -name "*.tar.gz" -o -name "*.zip" | xargs -I {} cp {} release-assets/
          ls -la release-assets/
      
      - name: Generate release notes
        id: release-notes
        run: |
          cat > release-notes.md << EOF
          ## Release ${{ github.event.inputs.version }}
          
          ### What's Changed
          - Release ${{ github.event.inputs.version }} of dapr-actor-gen
          
          ### Assets
          - **Binaries**: Available for Linux (amd64, arm64), macOS (amd64, arm64), and Windows (amd64)
          - **Docker Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}\`
          
          ### Installation
          
          #### Using Docker
          \`\`\`bash
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}
          \`\`\`
          
          #### Download Binary
          Download the appropriate binary for your platform from the assets below.
          
          **Full Changelog**: https://github.com/${{ github.repository }}/commits/${{ github.event.inputs.version }}
          EOF
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          body_path: release-notes.md
          draft: true
          files: release-assets/*
          token: ${{ secrets.GITHUB_TOKEN }}