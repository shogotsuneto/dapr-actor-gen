openapi: 3.0.3
info:
  title: Multi-Actor API with Enums
  description: |
    Dapr Actor API specification demonstrating enum usage.
    
    This specification demonstrates:
    - **CounterActor**: Counter with operating modes using the CounterMode enum
    
    **Enum Features Demonstrated**:
    - Type-safe enum constants with validation
    - Enum usage in request/response schemas
    - Enum integration with actor methods
    
    **Generated from**: This specification serves as the schema-first definition
    for generating Go interfaces, types, and enum constants.
  version: 2.0.0
  contact:
    name: Dapr Actor Gen - Enum Demo
    url: https://github.com/shogotsuneto/dapr-actor-gen
  license:
    name: MIT

servers:
  - url: http://localhost:3500/v1.0/actors
    description: Local Dapr sidecar (default configuration)

paths:
  # Counter paths demonstrating enum usage
  /Counter/{actorId}/state:
    get:
      summary: Get counter state with mode information
      description: |
        Retrieves the current counter state including the operating mode.
        Demonstrates enum usage in response data.
      parameters:
        - $ref: '#/components/parameters/ActorId'
      responses:
        '200':
          description: Current counter state with enum mode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterState'

  /Counter/{actorId}/method/Configure:
    post:
      summary: Configure counter mode
      description: |
        Configures the counter's operating mode using the CounterMode enum.
        Demonstrates enum usage in request validation.
      parameters:
        - $ref: '#/components/parameters/ActorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureCounterRequest'
      responses:
        '200':
          description: Counter configured successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterState'

  /Counter/{actorId}/method/Increment:
    post:
      summary: Increment the counter
      description: |
        Increments the counter value. Mode validation ensures operation compatibility.
      parameters:
        - $ref: '#/components/parameters/ActorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncrementRequest'
      responses:
        '200':
          description: Counter incremented successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterState'

  /Counter/{actorId}/method/Decrement:
    post:
      summary: Decrement the counter
      description: |
        Decrements the counter value. Mode validation ensures operation compatibility.
      parameters:
        - $ref: '#/components/parameters/ActorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecrementRequest'
      responses:
        '200':
          description: Counter decremented successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterState'

  /Counter/{actorId}/method/SetValue:
    post:
      summary: Set counter to specific value
      description: |
        Sets the counter to a specific value. Mode validation controls access.
      parameters:
        - $ref: '#/components/parameters/ActorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetValueRequest'
      responses:
        '200':
          description: Counter value set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterState'

components:
  parameters:
    ActorId:
      name: actorId
      in: path
      required: true
      description: |
        Unique identifier for the actor instance. Each actor ID maintains
        independent state within its actor type.
      schema:
        type: string
        pattern: '^[a-zA-Z0-9_-]+$'
        minLength: 1
        maxLength: 50
      example: "counter-123"

  schemas:
    # ========================================
    # ENUM DEFINITIONS - Core Feature Demo
    # ========================================
    
    CounterMode:
      type: string
      enum: ["Manual", "Automatic", "Scheduled", "Triggered"]
      description: Operating mode for the counter actor
      example: "Manual"

    # ========================================
    # COUNTER ACTOR SCHEMAS
    # ========================================

    CounterState:
      type: object
      description: Current state of the counter actor with enum-based configuration
      required:
        - value
        - mode
        - isEnabled
      properties:
        value:
          type: integer
          format: int32
          description: The current counter value
          example: 42
        mode:
          $ref: '#/components/schemas/CounterMode'
        isEnabled:
          type: boolean
          description: Whether the counter is currently enabled
          example: true
        lastModified:
          type: string
          format: date-time
          description: When the counter was last modified
          example: "2024-01-15T10:30:00Z"
        metadata:
          type: object
          description: Additional counter metadata
          additionalProperties: true
          example:
            tags: ["production", "metrics"]
            owner: "system"
      additionalProperties: false

    ConfigureCounterRequest:
      type: object
      description: Request to configure counter mode
      required:
        - mode
      properties:
        mode:
          $ref: '#/components/schemas/CounterMode'
        isEnabled:
          type: boolean
          description: Enable or disable the counter
          default: true
        metadata:
          type: object
          description: Optional metadata for the counter
          additionalProperties: true
          example:
            owner: "admin"
            purpose: "user-session-tracking"
      additionalProperties: false

    IncrementRequest:
      type: object
      description: Request to increment counter
      properties:
        step:
          type: integer
          format: int32
          description: How much to increment by
          minimum: 1
          default: 1
          example: 1
        reason:
          type: string
          description: Reason for the increment operation
          maxLength: 200
          example: "User login event"
      additionalProperties: false

    DecrementRequest:
      type: object
      description: Request to decrement counter
      properties:
        step:
          type: integer
          format: int32
          description: How much to decrement by
          minimum: 1
          default: 1
          example: 1
        reason:
          type: string
          description: Reason for the decrement operation
          maxLength: 200
          example: "User logout event"
      additionalProperties: false

    SetValueRequest:
      type: object
      description: Request to set counter to specific value
      required:
        - value
      properties:
        value:
          type: integer
          format: int32
          description: The value to set the counter to
          minimum: -2147483648
          maximum: 2147483647
          example: 100
        reason:
          type: string
          description: Reason for setting the value
          maxLength: 200
          example: "Reset for new month"
      additionalProperties: false